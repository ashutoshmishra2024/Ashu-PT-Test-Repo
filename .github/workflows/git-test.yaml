# This is a workflow for XXXX Project with Actions
name: Run Jmeter Tests
# Controls when the workflow will run
on:
  push
  
# A workflow run is made up of one or more jobs that can run sequentially
jobs:
  jmeter_job:
# The type of runner that the job will run on  
    runs-on: ecs-ec2-runner
    
# Git Checks-out our repository      
    name: JMeter Test Execution
    steps:      
    - name: Checkout
      uses: actions/checkout@v4

   # Run the Jmeter test cases
    - name: Run JMeter Tests
      run: |
       ls
       jmeter -n -t ./SampleAPI.jmx -Jpath=api/users?page=1 -Jduration=110 -Jusers=10 -Jrampup=10 -l ./SampleAPIjtl.jtl
      
   # Upload the Jmeter results    
    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-results
        path: SampleAPIjtl.jtl
        if-no-files-found: error
    # Generate an HTML Report    
    - name: Run JMeter Tests
      run: |
       ls
       jmeter -Jjmeter.reportgenerator.exporter.html.series_filter="((T[0-9] {1,3}_))" -g ./SampleAPIjtl.jtl -o ./HTMLReport
 
  # upload the HTML Reports    
    - name: Upload HTML Reports
      uses: actions/upload-artifact@v4
      with:
        name: jmeter-html-reports
        path: HTMLReport
        if-no-files-found: error

  # Download the HTML Reports    
    - name: Download HTML Reports
      uses: actions/download-artifact@v4
      with:
        name: jmeter-html-reports
        path: HTMLReport
        if-no-files-found: error

  # Run python script to convert .json to .csv
    - name: Run python script
      run: |
       python python-script.py
  
   
   # Run the python script
   # - name: Run python script
    #  run: |
     #  python3 python-test-script-1.py && \
      # python3 python-script-test-2.py

       
   #filter jtl
    # - name: remove rampup from jtl
    #  run: |
    #       cd /home/runner/work/pt-docker-script/pt-docker-script/apache-jmeter-5.6.3/bin
    #       chmod 777 FilterResults.sh
    #       ./FilterResults.sh --output-file ./SampleAPIFilteredjtl.jtl --input-file ./SampleAPIjtl.jtl --start-offset 600

  
